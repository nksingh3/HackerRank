import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'migratoryBirds' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static int migratoryBirds(List<Integer> arr) {
    // Write your code here
       /* int no=arr.get(0),freq=countFreq(arr,arr.get(0));
        for(int i=1;i<arr.size();++i)
        {
            int newFreq = countFreq(arr, arr.get(i));
            if(newFreq>freq)
            {
                freq=newFreq;
                no=arr.get(i);
            }
            else if(newFreq == freq)
            {
                if(arr.get(i)<no)
                    no=arr.get(i);
            }            
        }
        return no;*/
        
        List<Integer> list = new ArrayList<Integer>();
        for(int i=1;i<=6;++i)
        list.add(0);
        
        for(int i=0;i<arr.size();++i)
        {
            list.set(arr.get(i),list.get(arr.get(i))+1);
        }       
        int maxFreq=list.get(1),maxValue=1;
        for(int i=2;i<6;++i)
        {
            if(list.get(i)>maxFreq)
            {
                maxFreq=list.get(i);
                maxValue=i;
            }
        }
        return maxValue;
    }
    /*public static int countFreq(List<Integer> arr,int no)
    {
        int count=0;
        for(int i=0;i<arr.size();++i)
        {
            if(arr.get(i)==no)
                count++;
        }
        return count;
    }*/

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = Result.migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
